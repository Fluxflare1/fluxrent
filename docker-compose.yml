version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - db
    ports:
      - "8000:8000"

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    command: npm run start
    env_file: .env
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done"

volumes:
  postgres_data:
  certbot-etc:
  certbot-var:
